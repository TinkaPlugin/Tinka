author: Andreas Hahn
core-version: >=5.1.20
dependents: 
description: An easy plugin packer
list: readme usage license
name: Tinka
plugin-type: plugin
source: http://tinkaplugin.github.io
title: $:/plugins/ahahn/tinka
type: application/json
version: 0.5.0-beta

{
    "tiddlers": {
        "$:/plugins/ahahn/tinka/docs/Help Tab": {
            "title": "$:/plugins/ahahn/tinka/docs/Help Tab",
            "type": "text/vnd.tiddlywiki",
            "text": "!!Using the Sidebar Tab\n\nWhen working on a plugin, it is often handy to be able to navigate quickly between the plugin tiddlers. That is what the Sidebar Tab is for.\r\nAfter enabling it in the \"Tinka Plugin Management\" tab for a specific plugin in the Control Panel, it gives you an additional sidebar tab, that contains a list of all the tiddlers that are contained in the plugin in question. Furthermore, it also shows you tiddlers that live in the same \"directory\" which are likely tiddlers that you want to add to the plugin eventually.\n\nIf you have tiddlers whose names aren't prefixed by the plugin path, you can use the Filter search included in the help tab to select those. For example, if the rest of your tiddlers is scattered somewhere in the wiki, but tagged with <span class=\"tc-tag-label\">myPlugin</span>, you could use the filter: `[tag[myPlugin]]` to select them.\n\nThe \"Quick Package\" button gives you the option of quickly integrating changes you made to individual tiddlers into the plugin. Note that the \"Quick Package\" Button will only integrate the changes you made to tiddlers already contained in the plugin into the plugin tiddler itself, you can't add new tiddlers to a plugin this way. For those tasks, you will still have to use the control panel menu.\r\n"
        },
        "$:/plugins/ahahn/tinka/docs/How to create a new plugin": {
            "title": "$:/plugins/ahahn/tinka/docs/How to create a new plugin",
            "type": "text/vnd.tiddlywiki",
            "text": "!! How to create a new plugin\n\nTo create a completely new plugin, first go to the Control Panel extension Tinka provides and click on the \"Create new Plugin\" button. Next enter the ''plugin type'' of the plugin you want to create or choose a type from the dropdown menu. Usually you will want to use either the value \"''plugin''\" or \"''theme''\", as this covers most cases of plugins.\n\nNext is the ''plugin path'': This is the name of the tiddler where the finished plugin is going to be stored in. TiddlyWiki uses a special naming theme for these, so you will mostly find that the actual tiddlers that contain a plugin are named in this scheme:\n\n`$:/plugins/myOrganisation/pluginName`. \n\nThis ensures that plugins can be not only immideately recognized, but are also separate from other tiddlers in the wiki.\n\nAfter also entering a title for your new plugin or theme, you are basically good to go. These three fields: ''plugin type'', ''plugin path'' and the ''plugin title'' are all the fields that are required for a functioning plugin. In theory, you could now go ahead and press the \"''Package Plugin''\" button, which will give you an empty plugin shell to which you can add tiddlers later.\n\nIn most cases however it is desired to also fill out the rest of the metadata fields. In detail, these are:\n\n* ''(Plugin-)Name:'' This will be the name of the plugin that is prominently displayed in the control panel.\r\n* ''(Plugin-)Description:'' This is a short description of the plugin's functionality that is displayed after the name in the control panel.\r\n* ''Author:'' Name of the plugin author.\r\n* ''Source:'' Website or URL of the plugin, also the place where updates are found.\r\n* ''Dependents:'' List of plugins this plugin depends on (usually empty, but e.g. `$:/core`)\r\n* ''List'': List of tiddlers contained in the plugin, that will serve as readme tiddlers, when inspecting a plugin via the control panel. (e.g. `$:/plugins/ahahn/tinka/readme`)\r\n* ''Version:'' Version of your plugin in the format: X.X.X\r\n* ''Core-Version:'' Usually the minimal TiddlyWiki version your plugin requires in order for it to work (e.g //>=5.1.8//)\n\nAfter entering the metadata, all that is left is to select the tiddlers you want to include in the plugin. You can search for these via the default search field, but you can also use a filter to find them (e.g. based on a tag). In most cases it is sufficient to enter the name of the plugin into the default search in order to find the tiddlers that belong to the plugin. Lastly, just click the \"''Package Plugin''\" button and you're done, you have now created your first plugin. A save&refresh will be required for it to be loaded into TiddlyWiki.\r\n"
        },
        "$:/plugins/ahahn/tinka/icon": {
            "title": "$:/plugins/ahahn/tinka/icon",
            "type": "image/svg+xml",
            "text": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\r\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\n\n<svg\r\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\r\n   xmlns:cc=\"http://creativecommons.org/ns#\"\r\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\r\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\r\n   xmlns=\"http://www.w3.org/2000/svg\"\r\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n   width=\"28\"\r\n   height=\"28\"\r\n   id=\"svg2\"\r\n   version=\"1.1\"\r\n   inkscape:version=\"0.48.4 r9939\"\r\n   sodipodi:docname=\"tinka_logo.svg\">\r\n  <defs\r\n     id=\"defs4\" />\r\n  <sodipodi:namedview\r\n     id=\"base\"\r\n     pagecolor=\"#ffffff\"\r\n     bordercolor=\"#666666\"\r\n     borderopacity=\"1.0\"\r\n     inkscape:pageopacity=\"0.0\"\r\n     inkscape:pageshadow=\"2\"\r\n     inkscape:zoom=\"22.627417\"\r\n     inkscape:cx=\"12.192879\"\r\n     inkscape:cy=\"16.062665\"\r\n     inkscape:document-units=\"px\"\r\n     inkscape:current-layer=\"layer1\"\r\n     showgrid=\"false\"\r\n     inkscape:window-width=\"1920\"\r\n     inkscape:window-height=\"1137\"\r\n     inkscape:window-x=\"-8\"\r\n     inkscape:window-y=\"-8\"\r\n     inkscape:window-maximized=\"1\" />\r\n  <metadata\r\n     id=\"metadata7\">\r\n    <rdf:RDF>\r\n      <cc:Work\r\n         rdf:about=\"\">\r\n        <dc:format>image/svg+xml</dc:format>\r\n        <dc:type\r\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\r\n        <dc:title></dc:title>\r\n      </cc:Work>\r\n    </rdf:RDF>\r\n  </metadata>\r\n  <g\r\n     inkscape:label=\"Ebene 1\"\r\n     inkscape:groupmode=\"layer\"\r\n     id=\"layer1\"\r\n     transform=\"translate(0,-1024.3622)\">\r\n    <g\r\n       id=\"g2987\"\r\n       transform=\"matrix(0.21875,0,0,0.21875,-0.03334395,1024.3224)\"\r\n       style=\"fill-rule:evenodd\">\r\n      <path\r\n         id=\"path2989\"\r\n         d=\"m 40.397288,76.445699 0,18.894708 14.119729,0 0,0 c -4.64e-4,-0.0019 -9.28e-4,-0.0038 -0.0014,-0.0057 0.09369,0.0038 0.187859,0.0057 0.282472,0.0057 3.817607,0 6.912389,-3.094782 6.912389,-6.912389 0,-1.808236 -0.694317,-3.454305 -1.830894,-4.686151 l 0,0 c 0.0154,-0.0077 0.03082,-0.01536 0.04626,-0.02299 -1.041794,-1.210214 -1.671559,-2.785252 -1.671559,-4.50738 0,-3.817607 3.094781,-6.912389 6.912388,-6.912389 3.817607,0 6.912389,3.094782 6.912389,6.912389 0,1.983922 -0.835789,3.772635 -2.174474,5.033245 l 0,0 c 0.02875,0.01818 0.05739,0.0365 0.08594,0.05496 l 0,0 c -0.859106,1.151989 -1.367662,2.580762 -1.367662,4.128315 0,3.430479 2.498947,6.277297 5.775777,6.81939 -0.0073,0.03105 -0.01478,0.06205 -0.02239,0.093 l 21.320134,0 0,-19.772549 0,0 c -0.04975,0.013 -0.09964,0.02563 -0.149675,0.0379 0.0038,-0.09369 0.0057,-0.187859 0.0057,-0.282472 0,-3.817607 -3.094782,-6.912389 -6.912389,-6.912389 -1.808236,0 -3.454305,0.694317 -4.686152,1.830894 l 0,0 c -0.0077,-0.0154 -0.01536,-0.03082 -0.02299,-0.04626 -1.210214,1.041794 -2.785253,1.671559 -4.507381,1.671559 -3.817607,0 -6.912388,-3.094781 -6.912388,-6.912388 0,-3.817607 3.094781,-6.912389 6.912388,-6.912389 1.983923,0 3.772636,0.835789 5.033245,2.174474 l 0,0 c 0.01818,-0.02875 0.0365,-0.05739 0.05496,-0.08594 l 0,0 c 1.151989,0.859106 2.580762,1.367662 4.128315,1.367662 3.430479,0 6.277297,-2.498947 6.81939,-5.775777 0.07936,0.01871 0.158369,0.03834 0.237007,0.05889 l 0,-15.740322 -21.320134,0 0,0 c 0.0076,-0.03094 0.01507,-0.06194 0.02239,-0.093 l 0,0 c -3.27683,-0.542092 -5.775777,-3.388911 -5.775777,-6.81939 0,-1.547552 0.508556,-2.976326 1.367662,-4.128315 -0.02855,-0.01846 -0.0572,-0.03678 -0.08594,-0.05496 1.338685,-1.260609 2.174474,-3.049323 2.174474,-5.033245 C 72.07907,20.094782 68.984288,17 65.166681,17 c -3.817607,0 -6.912388,3.094782 -6.912388,6.912389 0,1.722128 0.629765,3.297167 1.671559,4.50738 l 0,0 c -0.01544,0.0076 -0.03086,0.01529 -0.04626,0.02299 1.136577,1.231846 1.830894,2.877915 1.830894,4.686151 0,3.817607 -3.094782,6.912389 -6.912389,6.912389 -0.09461,0 -0.188783,-0.0019 -0.282472,-0.0057 l 0,0 c 4.63e-4,0.0019 9.27e-4,0.0038 0.0014,0.0057 l -14.119729,0 0,12.846368 0,0 c 0.0944,0.455349 0.144008,0.927098 0.144008,1.410434 0,3.817607 -3.094782,6.912389 -6.912389,6.912389 -1.547552,0 -2.976326,-0.508556 -4.128315,-1.367663 -0.01846,0.02855 -0.03678,0.0572 -0.05496,0.08594 -1.260609,-1.338685 -3.049323,-2.174474 -5.033245,-2.174474 -3.817607,0 -6.912389,3.094781 -6.912389,6.912388 0,3.817607 3.094782,6.912389 6.912389,6.912389 1.722128,0 3.297167,-0.629765 4.50738,-1.671559 l 0,0 c 0.0076,0.01544 0.01529,0.03086 0.02299,0.04626 1.231846,-1.136577 2.877915,-1.830894 4.686151,-1.830894 3.817607,0 6.912389,3.094782 6.912389,6.912389 0,0.483335 -0.04961,0.955085 -0.144008,1.410434 z M 64,0 l 54.5596,32 0,64 L 64,128 9.4403996,96 l 0,-64 L 64,0 z\"\r\n         inkscape:connector-curvature=\"0\" />\r\n    </g>\r\n    <path\r\n       sodipodi:type=\"arc\"\r\n       style=\"fill:#630fb2;fill-opacity:1;fill-rule:nonzero;stroke:none\"\r\n       id=\"path2999\"\r\n       sodipodi:cx=\"456.42856\"\r\n       sodipodi:cy=\"165.93361\"\r\n       sodipodi:rx=\"162.14285\"\r\n       sodipodi:ry=\"162.14285\"\r\n       d=\"m 618.57141,165.93361 a 162.14285,162.14285 0 1 1 -0.002,-0.80734\"\r\n       sodipodi:start=\"0\"\r\n       sodipodi:end=\"6.2782061\"\r\n       sodipodi:open=\"true\"\r\n       transform=\"matrix(0.06593776,0,0,0.06593776,-16.215024,1027.2261)\" />\r\n    <path\r\n       style=\"fill:#3cff80;fill-opacity:1;fill-rule:nonzero;stroke:none\"\r\n       d=\"m 14.745406,1034.4667 -1.99638,3.2989 0,0.1196 0,7.1336 0,3.4185 1.99638,-3.299 0,-0.1195 0,-7.1336 0,-3.4185 z\"\r\n       id=\"rect3769\"\r\n       inkscape:connector-curvature=\"0\" />\r\n    <path\r\n       style=\"fill:#ffa600;fill-opacity:1;fill-rule:nonzero;stroke:none\"\r\n       d=\"m 7.3063061,1034.2471 3.2989499,-3.1032 0.11951,0 7.13365,0 3.41846,0 -3.29895,3.1032 -0.11951,0 -7.13365,0 -3.4184599,0 z\"\r\n       id=\"rect3769-0\"\r\n       inkscape:connector-curvature=\"0\" />\r\n  </g>\r\n</svg>\r\n"
        },
        "$:/plugins/ahahn/tinka/tinka-backupPlugin.js": {
            "title": "$:/plugins/ahahn/tinka/tinka-backupPlugin.js",
            "text": "/*\\\r\ntitle: $:/plugins/ahahn/tinka/tinka-backupPlugin.js\r\ntype: application/javascript\r\nmodule-type: widget\r\n\r\nTinka's backup action widget to backup a plugin.\r\n    \r\nBacks up the specified plugin tiddler and modifies the \r\n'plugin-type' and 'title' field accordingly.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar CommonAction = require(\"$:/plugins/ahahn/tinka/tinkaCommonAction.js\").tinkaCommonAction;\r\n\r\nvar BackupPluginWidget = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n    this.setup(false,false,{\r\n        \"$plugin\": \"\",\r\n        \"$restore\": \"no\"\r\n    },false);\r\n};\r\n\r\n/*\r\nInherit from the base widget class\r\n*/\r\nBackupPluginWidget.prototype = new CommonAction();\r\n\r\n/*\r\nSmall string table\r\n*/\r\nBackupPluginWidget.prototype.CONFIRM_OVERRIDE = \"You are about to restore a backup, but another version of this plugin is already active. Do you want to backup the current version (if not already existing) and restore this backup anyway ?\"; \r\n\r\n/*\r\nInvoke the action associated with this widget\r\n*/\r\nBackupPluginWidget.prototype.invokeAction = function(triggeringWidget,event) {\r\n    this.actionPlugin = this.param[\"$plugin\"];\r\n    this.actionRestore = this.param[\"$restore\"];\r\n\r\n\tif(this.actionPlugin) {\r\n      \tif(this.actionRestore == \"yes\") {\r\n          \tvar backupTiddler = this.wiki.getTiddler(this.actionPlugin);\r\n          \tvar operationConfirmed = true;\r\n          \tif(backupTiddler instanceof $tw.Tiddler) {      \r\n      \t\t\tif(this.checkIfExists(backupTiddler.fields[\"original-title\"])) {\r\n                  \toperationConfirmed = confirm(this.CONFIRM_OVERRIDE);\r\n                  \tif(operationConfirmed) {\r\n                      // after backing up, delete current $original-title Tiddler\r\n                      this.backupPlugin(backupTiddler.fields[\"original-title\"]);\r\n                      this.wiki.deleteTiddler(backupTiddler.fields[\"original-title\"]);  \t\r\n                    }\r\n                }\r\n              \r\n              \tif(operationConfirmed) {\r\n                  var pluginType = this.determinePluginType(backupTiddler.fields[\"plugin-type\"]);\r\n                  this.wiki.addTiddler(new $tw.Tiddler(backupTiddler,{\r\n                      \"title\": backupTiddler.fields[\"original-title\"],\r\n                      \"original-title\": undefined,\r\n                      \"plugin-type\": pluginType\r\n                  }));\r\n              \t}\r\n            }\r\n        }\r\n       \telse {\r\n    \t\tthis.backupPlugin(this.actionPlugin);\r\n       \t}\r\n    }\r\n  \treturn true; // Action was invoked\r\n};\r\n\r\nBackupPluginWidget.prototype.determinePluginType = function(name) {\r\n\tvar reg = /(.*)-backup/;\r\n  \tvar matches = name.match(reg);\r\n  \t\r\n  \tif(matches != null) {\r\n  \t\treturn matches[1]; \r\n    }\r\n  \r\n  \treturn \"plugin\";\r\n}\r\n\r\n\r\nBackupPluginWidget.prototype.backupPlugin = function(plugin) {\r\n\tvar pluginTiddler = this.wiki.getTiddler(plugin);\r\n    var didBackup = false;\r\n      \tif(pluginTiddler instanceof $tw.Tiddler) {\r\n            var backupTitle = this.getBackupTitle(pluginTiddler.fields.title,pluginTiddler.fields.version);\r\n            didBackup = true;\r\n          \r\n          \t//Don't make a backup if a backup already exists\r\n          \tif(!this.checkIfExists(backupTitle)) {\r\n              var backupTiddler = new $tw.Tiddler(pluginTiddler,{\r\n                  \"title\": backupTitle,\r\n                  \"original-title\": pluginTiddler.fields.title,\r\n                  \"plugin-type\": \"\" + pluginTiddler.fields[\"plugin-type\"] + \"-backup\"\r\n              });\r\n\r\n              this.wiki.addTiddler(backupTiddler);           \r\n          \t}\r\n        }\r\n  \treturn didBackup;\r\n}\r\n\r\nBackupPluginWidget.prototype.getBackupTitle = function(title,version) {\r\n \treturn \"\" + title + \"-\" + version + \"-backup\";\r\n};\r\n  \r\nBackupPluginWidget.prototype.checkIfExists = function(tiddler) {\r\n\treturn this.wiki.getTiddler(tiddler) != undefined;\r\n}\r\n\r\nexports[\"tinka-backupPlugin\"] = BackupPluginWidget;\r\n\r\n})();\r\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/ahahn/tinka/tinka-check.js": {
            "title": "$:/plugins/ahahn/tinka/tinka-check.js",
            "text": "/*\\\r\ntitle: $:/plugins/ahahn/tinka/tinka-check.js\r\ntype: application/javascript\r\nmodule-type: widget\r\n\r\nChecks param \"text\" for match with \"pattern\".\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar TinkaCommonActionWidget = require(\"$:/plugins/ahahn/tinka/tinkaCommonAction.js\").tinkaCommonAction;\r\n\r\nvar CheckAction = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n\tthis.setup(false,true,[\"text\", \"pattern\"],true);\r\n};\r\n\r\nCheckAction.prototype = new TinkaCommonActionWidget();\r\n/*\r\nInvoke the action associated with this widget\r\n*/\r\nCheckAction.prototype.invokeAction = function(triggeringWidget,event) {\r\n\t//important: recompute Attributes\r\n\tthis.processAttributes();\r\n\tvar regexp = new RegExp(this.param[\"pattern\"]);\r\n\t\r\n\tif(regexp.test(this.param[\"text\"])) {\r\n\t\tvar ev = {};\r\n\t\tev.verb = \"pass\";\r\n\t\tev.data = event;\r\n\t\tthis.invokeActions(triggeringWidget,ev); \r\n\t}\r\n\telse {\r\n\t\tvar ev = {};\r\n\t\tev.verb = \"fail\";\r\n\t\tev.data = event;\r\n\t\tthis.invokeActions(triggeringWidget,ev);\r\n\t}\r\n\t\r\n\treturn true; // Action was invoked\r\n};\r\n\r\nexports[\"tinka-check\"] = CheckAction;\r\n\r\n})();\r\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/ahahn/tinka/tinka-filter.js": {
            "title": "$:/plugins/ahahn/tinka/tinka-filter.js",
            "text": "/*\\\r\ntitle: $:/plugins/ahahn/tinka/tinka-filter.js\r\ntype: application/javascript\r\nmodule-type: widget\r\n\r\nWidgets to filters actions according to their verb.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar TinkaCommonActionWidget = require(\"$:/plugins/ahahn/tinka/tinkaCommonAction.js\").tinkaCommonAction;\r\n\r\nvar FilterAction = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n\tthis.setup(false, true, [\"verb\"], true);\r\n};\r\n\r\nFilterAction.prototype = new TinkaCommonActionWidget();\r\n/*\r\nInvoke the action associated with this widget\r\n*/\r\nFilterAction.prototype.invokeAction = function(triggeringWidget,event) {\r\n\tif (event.verb === this.param[\"verb\"]) {\r\n\t\tthis.invokeActions(triggeringWidget, event);\r\n\t}\r\n\treturn true; // Action was invoked\r\n};\r\n\r\nexports[\"tinka-filter\"] = FilterAction;\r\n\r\n})();\r\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/ahahn/tinka/tinka-repackagePlugin.js": {
            "title": "$:/plugins/ahahn/tinka/tinka-repackagePlugin.js",
            "text": "/*\\\r\ntitle: $:/plugins/ahahn/tinka/tinka-repackagePlugin.js\r\ntype: application/javascript\r\nmodule-type: widget\r\n\r\nrepackagePlugin action widget\r\n\r\n<$repackagePlugin $plugin=<<target>> $repackage=\"yes\" $diff=<<qualified-modify-diff>> />\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar CommonAction = require(\"$:/plugins/ahahn/tinka/tinkaCommonAction.js\").tinkaCommonAction;\r\n\r\n  \r\nvar repackagePluginWidget = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n    this.setup(false,false,[\"$plugin\",\"$create\",\"$diff\"],false);\r\n};\r\n\r\n/*\r\nInherit from the base widget class\r\n*/\r\nrepackagePluginWidget.prototype = new CommonAction();\r\n\r\n/*\r\nInvoke the action associated with this widget\r\n*/\r\nrepackagePluginWidget.prototype.invokeAction = function(triggeringWidget,event) {\r\n  \tvar diff = {};\r\n  \tvar title = \"\";\r\n\tthis.actionPlugin = this.param[\"$plugin\"];\r\n\tthis.actionCreate = this.param[\"$create\"];\r\n  \tthis.actionDiff = this.param[\"$diff\"];\r\n\r\n  \tif(this.actionPlugin) {\r\n      title = this.actionPlugin;\r\n      if(this.actionDiff) {\r\n     \tvar tid = this.wiki.getTiddler(this.actionDiff);\r\n        diff = tid || {};\r\n      }\r\n      \r\n      if(this.actionCreate == \"yes\") {\r\n        //create new plugin Tiddler with the data from the diff tiddler\r\n        var pluginTid = {};\r\n        \r\n        title = diff.fields[\"create-title\"] || this.actionPlugin;\r\n        pluginTid.title = title;\r\n        pluginTid[\"text\"] =\t\"{\\\"tiddlers\\\": {}}\";\r\n        pluginTid[\"type\"] = \"application/json\";\r\n        pluginTid[\"author\"] = diff.fields[\"create-author\"];\r\n        pluginTid[\"description\"] = diff.fields[\"create-description\"];\r\n\t\tpluginTid[\"name\"] = diff.fields[\"create-name\"];\r\n        pluginTid[\"list\"] = diff.fields[\"create-list\"];\r\n        pluginTid[\"plugin-type\"] = diff.fields[\"create-plugin-type\"];\r\n        pluginTid[\"dependents\"] = diff.fields[\"create-dependents\"];\r\n        pluginTid[\"version\"] = diff.fields[\"create-version\"];\r\n        pluginTid[\"core-version\"] = diff.fields[\"create-core-version\"];\r\n        this.wiki.addTiddler(new $tw.Tiddler(pluginTid));\r\n      }\r\n      \r\n      //execute repackaging\r\n      $tw.utils.repackPlugin(title,diff.fields.addTiddlers,diff.fields.removeTiddlers);\r\n  \t}\r\n};\r\n\r\nexports[\"tinka-repackagePlugin\"] = repackagePluginWidget;\r\n\r\n})();\r\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/ahahn/tinka/tinka-saveTaglistToField.js": {
            "title": "$:/plugins/ahahn/tinka/tinka-saveTaglistToField.js",
            "text": "/*\\\r\ntitle: $:/plugins/ahahn/tinka/tinka-saveTaglistToField.js\r\ntype: application/javascript\r\nmodule-type: widget\r\n\r\nSaves a tiddlers list of tags to a csv field.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar CommonAction = require(\"$:/plugins/ahahn/tinka/tinkaCommonAction.js\").tinkaCommonAction;\r\n\r\nvar SaveTaglistToFieldWidget = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n    this.setup(false,false,[\"$target\",\"$tiddler\",\"$field\"],false);\r\n};\r\n\r\n/*\r\nInherit from the base widget class\r\n*/\r\nSaveTaglistToFieldWidget.prototype = new CommonAction();\r\n\r\n/*\r\nInvoke the action associated with this widget\r\n*/\r\nSaveTaglistToFieldWidget.prototype.invokeAction = function(triggeringWidget,event) {\r\n\tvar taglist = [];\r\n  \tvar field = \"text\";\r\n  \r\n    if(this.param[\"$target\"]) {\r\n    \tvar targetTags = this.wiki.getTiddler(this.param[\"$target\"]);\r\n      \t\r\n      \tif(targetTags) {\r\n      \t\ttaglist = targetTags.fields.tags || [];\r\n      \t}\r\n    }\r\n  \r\n  \tif(this.param[\"$field\"]) {\r\n  \t\tfield = this.param[\"$field\"];\r\n  \t}\r\n  \r\n  \tif(this.param[\"$tiddler\"]) {\r\n  \t\t//save taglist in field on tiddler\r\n      \tthis.wiki.setTextReference(this.param[\"$tiddler\"]+ \"!!\" +field,taglist,this.getVariable(\"currentTiddler\")); \r\n \t}\r\n\r\n  return true; // Action was invoked\r\n};\r\n\r\nexports[\"tinka-saveTaglistToField\"] = SaveTaglistToFieldWidget;\r\n\r\n})();\r\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/ahahn/tinka/tinkaCommonAction.js": {
            "title": "$:/plugins/ahahn/tinka/tinkaCommonAction.js",
            "text": "/*\\\r\ntitle: $:/plugins/ahahn/tinka/tinkaCommonAction.js\r\ntype: application/javascript\r\nmodule-type: widget\r\n\r\nTinka common action widget\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\r\n\r\nvar CommonActionWidget = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n};\r\n\r\n/*\r\nInherit from the base widget class\r\n*/\r\nCommonActionWidget.prototype = new Widget();\r\n\r\n/*\r\nSetup an action widget with these properties\r\n*/\r\nCommonActionWidget.prototype.setup = function(allowPropagation,doRenderChildren,preparedParams,refreshOnAttributeChange) {\r\n\tthis.doRenderChildren = doRenderChildren;\r\n\tthis.preparedParams = preparedParams;\r\n\tthis.allowPropagation = allowPropagation;\r\n\tthis.refreshOnAttributeChange = refreshOnAttributeChange;\r\n};\r\n  \r\n  \r\n/*\r\nRender this widget into the DOM\r\n*/\r\nCommonActionWidget.prototype.render = function(parent,nextSibling) {\r\n\tthis.parentDomNode = parent;\r\n\tthis.computeAttributes();\r\n\tthis.execute();\r\n  \tif(this.doRenderChildren) {\r\n\t\tthis.renderChildren(parent,nextSibling);\r\n  \t}\r\n};\r\n\r\n/*\r\nCompute the internal state of the widget\r\n*/\r\nCommonActionWidget.prototype.execute = function() {\r\n    this.processAttributes();\r\n\t// Construct the child widgets\r\n\tif(this.doRenderChildren) {\r\n\t\tthis.makeChildWidgets();\r\n\t}\r\n};\r\n\t\r\n/*\r\nCompute the values of our attributes\r\n*/\r\nCommonActionWidget.prototype.processAttributes = function() {\r\n\tvar self = this;\r\n\tthis.computeAttributes();\r\n\tthis.param = {};\r\n\r\n    if(this.isObject(this.preparedParams) && !this.isArray(this.preparedParams)) {\r\n        $tw.utils.each(this.preparedParams,function(def, name) {\r\n            self.param[name] = self.getAttribute(name,def);\r\n        });\r\n    }\r\n    else {\r\n        $tw.utils.each(this.preparedParams,function(name) {\r\n            self.param[name] = self.getAttribute(name);\r\n        });\r\n    }\r\n};\r\n\r\nCommonActionWidget.prototype.allowActionPropagation = function() {\r\n\treturn this.allowPropagation;\t\r\n};\r\n\r\nCommonActionWidget.prototype.isEmptyObject = function(obj) {\r\n\tfor(var prop in obj) {\r\n        if(obj.hasOwnProperty(prop))\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nCommonActionWidget.prototype.isObject = function(obj) {\r\n    return ((obj !== null) && (typeof obj === 'object'));\r\n};\r\n\r\nCommonActionWidget.prototype.isArray = function(obj) {\r\n    return (Object.prototype.toString.call(obj) === '[object Array]');\r\n};\r\n\r\n/*\r\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\r\n*/\r\nCommonActionWidget.prototype.refresh = function(changedTiddlers) {\r\n  \tvar changedAttributes = this.computeAttributes();\r\n\t\t\r\n\tif(!this.isEmptyObject(changedAttributes) && this.refreshOnAttributeChange) {\r\n\t\tthis.refreshSelf();\r\n\t\treturn true;\r\n    }\r\n\telse if (!this.isEmptyObject(changedAttributes)) {\r\n\t\tthis.processAttributes();\r\n\t}\r\n\t\r\n\treturn this.refreshChildren(changedTiddlers);\t\t\r\n};\r\n\r\nexports.tinkaCommonAction = CommonActionWidget;\r\n\r\n})();\r\n",
            "type": "application/javascript",
            "module-type": "widget"
        },
        "$:/plugins/ahahn/tinka/license": {
            "title": "$:/plugins/ahahn/tinka/license",
            "type": "text/vnd.tiddlywiki",
            "caption": "license",
            "text": "Tinka Plugin for Tiddlywiki5\n\nCopyright (c) 2020 Andreas Hahn <tinka.plugin@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n"
        },
        "$:/plugins/ahahn/tinka/emptyDiff": {
            "title": "$:/plugins/ahahn/tinka/emptyDiff",
            "type": "text/vnd.tiddlywiki",
            "text": ""
        },
        "$:/plugins/ahahn/tinka/tinka-export": {
            "title": "$:/plugins/ahahn/tinka/tinka-export",
            "tags": "$:/tags/Macro",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define tinkaExportButtonFilename(baseFilename)\r\n$baseFilename$$(extension)$\r\n\\end\n\n\\define tinkaExportQualifiedState()\r\n$:/state/popup/tinkaExport-$(currentTiddler)$\r\n\\end\n\n\\define tinkaExportButton(exportFilter:\"[!is[system]sort[title]]\",lingoBase,baseFilename:\"tiddlers\")\r\n<span class=\"tc-popup-keep\">\r\n<$button popup=<<tinkaExportQualifiedState>> tooltip={{$lingoBase$Hint}} aria-label={{$lingoBase$Caption}} class=<<tv-config-toolbar-class>> selectedClass=\"tc-selected\">\r\n<$list filter=\"[<tv-config-toolbar-icons>prefix[yes]]\">\r\n{{$:/core/images/export-button}}\r\n</$list>\r\n<$list filter=\"[<tv-config-toolbar-text>prefix[yes]]\">\r\n<span class=\"tc-btn-text\"><$text text={{$lingoBase$Caption}}/></span>\r\n</$list>\r\n</$button>\r\n</span>\r\n<$reveal state=<<tinkaExportQualifiedState>> type=\"popup\" position=\"below\" animate=\"yes\">\r\n<div class=\"tc-drop-down\">\r\n<$list filter=\"[all[shadows+tiddlers]tag[$:/tags/Exporter]]\">\r\n<$set name=\"extension\" value={{!!extension}}>\r\n<$button class=\"tc-btn-invisible\">\r\n<$action-sendmessage $message=\"tm-download-file\" $param=<<currentTiddler>> exportFilter=\"\"\"$exportFilter$\"\"\" filename=<<exportButtonFilename \"\"\"$baseFilename$\"\"\">>/>\r\n<$action-deletetiddler $tiddler=<<tinkaExportQualifiedState>>/>\r\n<$transclude field=\"description\"/>\r\n</$button>\r\n</$set>\r\n</$list>\r\n</div>\r\n</$reveal>\r\n\\end\r\n"
        },
        "$:/plugins/ahahn/tinka/readme": {
            "title": "$:/plugins/ahahn/tinka/readme",
            "type": "text/vnd.tiddlywiki",
            "text": "This is a Control Panel extension that aims to simplify the plugin creation and editing process. After installing, you will find a new tab in your control panel that makes creating and modifying plugins a little bit easier.\n\n<a target=\"blank\" href=\"http://tinkaplugin.github.io\">Project Homepage on tinkaplugin.github.io</a>\n\n!! Version History\n\n!!! 2020-07-30 Release of version 0.5.0-beta\n\n''Changelog''\n\n* Fixed graphical glitches with newer versions of TW5\r\n* Reworked the interface for modifying plugins\r\n* Added the ability to select and unselect all search results when adding tiddlers to plugins\r\n* `name` and `description` field are now used for both plugins and themes\r\n* Added default filter to the search\r\n* You can now attach notes to backups\r\n* Renamed control panel tabs\r\n* The version will correctly be set when creating a new plugin\n\n!!! 2017-05-13 Release of version 0.4.0\n\nThis release fixes the following bugs:\n\n''Changelog''\n\n* Themes will now get the correct prefix `$:/themes/` when packaging\r\n* Fixed search results not linking properly\r\n* Added description field when creating a new theme\n\n\r\n!!! 2017-03-01 Release of version 0.3.0\n\nAfter more than a year, Tinka is now on <a target=\"blank\" href=\"http://tinkaplugin.github.io\">github</a> and also released under the [[MIT license|$:/plugins/ahahn/tinka/license]].\n\n''Changelog''\n\n* Packaging success now produces a modal that actively reminds the user to refresh the wiki.\r\n* The search tab state is now kept in a temporary system tiddler.\r\n* Added warning when repackaging themes that are not active.\r\n* The 'Help Tab' functionality is now also available for plugins that do not follow the `$:/plugins/...` naming convention. In particular this applies to themes and core plugins.\r\n* Fixed wrong headings for some modal dialogs.\r\n* Older action widgets remodeled to use the (new) CommonAction widget as a base.\r\n* Fixed error check that prevented users to enter a minimal core version dependency when creating a new plugin.\n\n!!! 2015-09-20 Release of version 0.2.0-beta\n\n''Changelog''\n\n* Added Help-Tab capabilities to quickly navigate between plugin tiddlers.\r\n* Moved Create-Plugin wizard to its own tab.\r\n* Redid Create-Plugin UI to be easier and more accessible.\r\n* Backups can now also be downloaded/exported.\r\n* Added more documentation.\n\n!!! 2015-05-18 Release of version 0.1.0\n\n''Changelog''\n\n* The metadata section now include edit fields for the `name` and `source` fields.\r\n* The //default search// box now only searches for title matches.\r\n* Backups can now be exported/downloaded.\r\n* <div>Backups can now be restored and made active again. If another version of the plugin is already active, the option is given to back it up,before restoring the backup.\n\n\r\n''Warning: For this mechanism to work, there has to be an 'original-title' field present in the backup tiddler. This is automatically added by Tinka, however earlier versions of Tinka did not add this field. If you want to restore a backup from an earlier version of Tinka, you will have to add the 'original-title' field manually and populate it with the former title of the plugin tiddler, in order for the restore function to work.''\r\n</div>\n\n!!! 2015-04-30 Release of version 0.0.2\n\n''Changelog''\n\n* The list of plugin tiddlers is now hidden by default, since some lists can get very long.\r\n* Added a different search option (default/filter)\r\n* Improved Documentation slightly\r\n* Added a backup option, so a plugin can be backed up before repackaging.\n\n   \r\n!!! 2015-04-29 Release of version 0.0.1\r\n"
        },
        "$:/plugins/ahahn/tinka/style": {
            "title": "$:/plugins/ahahn/tinka/style",
            "list-after": "$:/themes/tiddlywiki/vanilla/base",
            "tags": "$:/tags/Stylesheet",
            "type": "text/vnd.tiddlywiki",
            "text": "\r\n/* ==button styles== */\n\nbutton.tinka-blue, button.tinka-orange {\r\n  font-weight: normal;\r\n  font-size: 1em;\r\n  color: #fff;\r\n  fill: #fff;\r\n}\n\n.tinka-blue {\r\n  background-color: #5E9FCA;\r\n}\n\n.tinka-orange {\r\n  background-color: #FF8C19;\r\n}\n\n.tinka-archive-buttons {\r\n  padding-left: 30px;\r\n  display: inline-block;\r\n}\n\nbutton.tinka-sidebar-button, button.tinka-invisible  {\r\n  color: #acacac;\r\n  fill: #acacac;\r\n}\n\n.tinka-enlarge {\r\n  font-size: 1.5em;\r\n  padding: 1.5em;\r\n}\n\n.tinka-enlarge svg {\r\n  font-size: 3em;\r\n}\n\n.tinka-orb {\r\n  border-radius: 10pt;\r\n}\n\n.tc-dirty .tinka-button-refresh {\r\n  display: none;\r\n}\n\n/* ==container styles== */\n\n.tinka-centered-container {\r\n  text-align: center;\r\n  padding: 1em;\r\n}\n\n.tinka-note {\r\n  display:block;\r\n  padding-left: 5px;\r\n  background-color: #FFF9B0;\r\n  color: #7F7A32;\r\n  border: 1px solid #7F7A32;\r\n  border-radius: 5px;\r\n  font-style: italic;\r\n  font-size: 0.8em;\r\n}\n\n.tinka-note-red {\r\n  display:block;\r\n  padding-left: 5px;\r\n  background-color: #E8DEE0;\r\n  color: #E82C0C;\r\n  border: 1px solid #E82C0C;\r\n  border-radius: 5px;\r\n  font-style: italic;\r\n  font-size: 0.8em;\r\n}\n\n.tinka-backup-info {\r\nflex-wrap: wrap;\r\n}\n\n.tinka-backup-info .tinka-backup-note {\r\nflex-basis: 100%;\r\n}\n\n/* ==text formatting== */\n\n.tinka-list-item {\r\n\tlist-style: none;\r\n}\n\n.tinka-saving {\r\n  display: none;\r\n}\n\n.tc-dirty .tinka-saving {\r\n  display: inline;\r\n}\n\n.tinka-success {\r\n  color: #26CC50;\r\n}\n\n.tinka-success .tc-image-done-button, .tinka-success .tc-image-save-button {\r\n  fill: #26CC50;\r\n}\n\n.tinka-error {\r\n  color: #F00;\r\n}\n\n.tinka-error .tc-image-close-button {\r\n  fill: #F00;\r\n}\n\ntable.tinka-meta-table tr td {\r\n  padding: 5px;\r\n}\n\n/* ==forms style== */\r\n.tc-control-panel input.tinka-inline-edit {\r\n  width: 30%;\r\n  min-width: 30pt;\r\n}\n\n.tinka-full-edit {\r\n  width: 100%;\r\n}\n\n.tc-control-panel input.tinka-full-edit,  input.tinka-full-edit {\r\n  width: 100%;\r\n}\r\n"
        },
        "$:/plugins/ahahn/tinka/backupList": {
            "title": "$:/plugins/ahahn/tinka/backupList",
            "caption": "Backups",
            "list-after": "$:/plugins/ahahn/tinka/pluginManagement",
            "tags": "$:/tags/tinka/ControlPanel",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define plugin-export()\r\n[title[$(currentTiddler)$]]\r\n\\end\n\n\\define plugin-icon-title()\r\n$(currentTiddler)$/icon\r\n\\end\n\n\\define plugin-disable-title()\r\n$:/config/Plugins/Disabled/$(currentTiddler)$\r\n\\end\n\n\\define plugin-table-body(type,disabledMessage)\r\n<div class=\"tc-plugin-info-chunk tc-plugin-info-icon\">\r\n<$transclude tiddler=<<currentTiddler>> subtiddler=<<plugin-icon-title>>>\r\n<$transclude tiddler=\"$:/core/images/plugin-generic-$type$\"/>\r\n</$transclude></div>\r\n<div class=\"tc-plugin-info-chunk tc-plugin-info-description\" style=\"flex-grow:1;\">\r\n<$link to={{!!title}}>\r\n<h1>''<$view field=\"description\"><$view field=\"title\"/></$view>'' $disabledMessage$\r\n</h1>\r\n<h2>\r\n<$view field=\"title\"/>\r\n</h2>\r\n<h2>\r\n<div><em><$view field=\"version\"/></em></div>\r\n</h2></$link></div>\r\n<div class=\"tinka-archive-buttons\">\r\n<$macrocall $name=\"tinkaExportButton\" exportFilter=<<plugin-export>> />\r\n<$button class=\"tc-btn-big-green tinka-blue\">\r\n<$tinka-backupPlugin $plugin=<<currentTiddler>> $restore=\"yes\"/>\r\n<$action-sendmessage $message=\"tm-modal\" $param=\"$:/plugins/ahahn/tinka/restoreSuccess\" />Restore</$button>\r\n</div>\r\n<div class=\"tinka-backup-note\">\r\n''Note'':\r\n<$edit-text tag=\"textarea\" field=\"note\" class=\"tinka-full-edit\"/>\r\n</div>\r\n\\end\n\n\\define plugin-table(type)\r\n<$list filter=\"[!has[draft.of]plugin-type[$type$]sort[description]]\" emptyMessage=<<lingo \"Empty/Hint\">>>\r\n<div class=\"tc-plugin-info tinka-backup-info\">\r\n<<plugin-table-body type:\"$type$\">>\r\n</div>\r\n</$list>\r\n\\end\n\n!!Backups\n\n<<plugin-table plugin-backup>>\r\n<<plugin-table theme-backup>>\r\n<<plugin-table language-backup>>\r\n"
        },
        "$:/plugins/ahahn/tinka/controlPanelExtension": {
            "title": "$:/plugins/ahahn/tinka/controlPanelExtension",
            "caption": "Tinka Plugin Management",
            "tags": "$:/tags/ControlPanel",
            "type": "text/vnd.tiddlywiki",
            "text": "<<tabs \"[[$:/plugins/ahahn/tinka/pluginManagement]] [[$:/plugins/ahahn/tinka/createDialog]] [[$:/plugins/ahahn/tinka/backupList]]\" \"$:/plugins/ahahn/tinka/pluginManagement\" \"$:/temp/tinka/cpTabs\">>\r\n"
        },
        "$:/plugins/ahahn/tinka/createDialog": {
            "title": "$:/plugins/ahahn/tinka/createDialog",
            "caption": "Create a new Plugin",
            "tags": "$:/tags/tinka/ControlPanel",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define plugin-tiddler-selection()\r\n[[$(target)$]plugintiddlers[]]\r\n\\end\n\n\\define qualified-modify-add()\r\n$(qualifiedTiddler)$-$(target)$-add\r\n\\end\n\n\\define qualified-modify-diff()\r\n$(qualifiedTiddler)$-$(target)$-diff\r\n\\end\n\n\\define diff-plugin-title()\r\n$(qualifiedTiddler)$-$(target)$-diff!!create-title\r\n\\end\n\n\\define added-filter()\r\n[[$(addedTiddlers)$]tags[]]\r\n\\end\n\n\\define concatPluginTitle(prefix, sep)\r\n$prefix$$(createTitleOrg)$$sep$$(createTitleName)$\r\n\\end\n\n\\define tiddlerReference(ref)\r\n$(currentTiddler)$$ref$\r\n\\end\n\n\\define varsReference(ref)\r\n$(TinkaVars)$$ref$\r\n\\end\n\n\r\n!! Create New Plugin\n\n<span class=\"tinka-note\">Usage: Enter the necessary metadata for your plugin and use the Filter selection below to pick the tiddlers that should be added to the plugin. After selecting the tiddlers, press 'Package Plugin'. Refer to the <span style=\"font-style:normal;\">[[Documentation|$:/plugins/ahahn/tinka/usage]]</span> for further help.</span>\n\n<$set name=\"target\" value=\"skeleton\">\r\n<$set name=\"qualifiedTiddler\" value=<<qualify \"$:/temp/tinka/modify\">> >\n\n!!! Step 1: Enter Metadata\n\n\r\n<$set name=\"currentTiddler\" value=<<qualified-modify-diff>>>\r\n\t<$transclude mode=\"block\" tiddler=\"$:/plugins/ahahn/tinka/createMetadata\"/>\r\n</$set>\n\n!!! Step 2: Add Tiddlers\n\nUse the search box below to select the tiddlers you want to add to the plugin.\n\n{{$:/plugins/ahahn/tinka/searchDisplay}}\n\n\r\n''Added Tiddlers''\n\n<$set name=\"addedTiddlers\" value=<<qualified-modify-add>> >\r\n<ul>\r\n<$list filter=<<added-filter>> emptyMessage=\"<i>No tiddlers added.</i>\">\r\n\t\t<li class=\"tinka-list-item\">\r\n        <$checkbox tiddler=<<qualified-modify-add>> tag={{!!title}} />\r\n        <$link to={{!!title}}>{{!!title}}</$link>\r\n        </li>\r\n</$list>\r\n</ul>\r\n</$set>\n\n\r\n<$button class=\"tc-btn-big-green tinka-orange\">\r\n<$set name=\"TinkaVars\" value=\"$:/temp/tinka/CreateVars\">\r\n<$set name=\"currentTiddler\" value=<<qualified-modify-diff>>>\r\n\t<$action-deletetiddler $tiddler=<<TinkaVars>> />\r\n\t<$action-setfield $tiddler=<<TinkaVars>> result=\"false\" />\n\n\t<!-- Check whether a plugin title was given -->\r\n\t<$tinka-check text={{!!create-title-org}} pattern=\"^[^\\s]+$\">\r\n\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorTitle=\"The plugin title is not allowed to be empty or contain whitespaces.\"/>\r\n\t\t</$tinka-filter>\r\n\t</$tinka-check>\r\n\t\t\r\n\t<$tinka-check text={{!!create-title-name}} pattern=\"^[^\\s]+$\">\r\n\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorTitle=\"The plugin path is not allowed to be empty or contain whitespaces.\"/>\r\n\t\t</$tinka-filter>\r\n\t</$tinka-check>\r\n\t\t\r\n\t<!-- Check whether a plugin type is set-->\r\n\t<$tinka-check text={{!!create-plugin-type}} pattern=\"^.+$\">\r\n\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorType=\"You have to set a plugin type.\"/>\r\n\t\t</$tinka-filter>\r\n\t</$tinka-check>\r\n\t\t\r\n\t\t<!-- Check whether a name and a description was given-->\r\n\t\t<$tinka-check text={{!!create-description}} pattern=\"^.+$\">\r\n\t\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorPlugin=\"You have to enter a plugin title.\"/>\r\n\t\t\t</$tinka-filter>\r\n\t\t</$tinka-check>\r\n\t\t<$tinka-check text={{!!create-name}} pattern=\"^.+$\">\r\n\t\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorTheme=\"You have to enter a theme title.\"/>\r\n\t\t\t</$tinka-filter>\r\n\t\t</$tinka-check>\r\n\t\t\r\n\t\t<!--Check Version numbers, if entered-->\r\n\t\t<$reveal state=<<tiddlerReference \"!!create-version\">> type=\"nomatch\" text=\"\">\r\n\t\t\t<$tinka-check text={{!!create-version}} pattern=\"^(\\d)+\\.(\\d)+\\.(\\d)+(-\\w+)?$\">\r\n\t\t\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorVersion=\"Version numbers must have the following format: X.X.X (e.g. 1.0.0).\"/>\r\n\t\t\t\t</$tinka-filter>\r\n\t\t\t</$tinka-check>\r\n\t\t</$reveal>\r\n\t\t\r\n\t\t<$reveal state=<<tiddlerReference \"!!create-core-version\">> type=\"nomatch\" text=\"\">\r\n\t\t\t<$tinka-check text={{!!create-core-version}} pattern=\"^(>|>=|<|<=)?(\\d)+\\.(\\d)+\\.(\\d)+(-\\w+)?$\">\r\n\t\t\t\t<$tinka-filter verb=\"fail\">\r\n\t\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> result=\"true\"/>\r\n\t\t\t\t\t<$action-setfield $tiddler=<<TinkaVars>> errorCoreVersion=\"The core version number must have the following format: [>|>=|<|<=|]X.X.X-AAAA (e.g. >=5.1.8).\"/>\r\n\t\t\t\t</$tinka-filter>\r\n\t\t\t</$tinka-check>\r\n\t\t</$reveal>\n\n\t<$set name=\"currentTiddler\" value=<<TinkaVars>> >\r\n\t<$tinka-check text={{!!result}} pattern=\"^false$\">\r\n\t<$set name=\"currentTiddler\" value=<<qualified-modify-diff>>>\r\n\t<$tinka-filter verb=\"pass\">\r\n\t<!--Compute the plugin title (create-title> from the create-title-org and create-title-name fields -->\n\n\t\t<$set name=\"createTitleOrg\" value={{!!create-title-org}}>\r\n\t\t\t<$set name=\"createTitleName\" value={{!!create-title-name}}>\r\n                <!--If the plugin is a theme, use a different plugin-prefix -->\r\n                <$reveal state=<<tiddlerReference \"!!create-plugin-type\">> type=\"match\" text=\"theme\">\r\n\t\t\t\t    <$action-setfield create-title=<<concatPluginTitle \"$:/themes/\" \"/\">> />\r\n                </$reveal>\n\n                <$reveal state=<<tiddlerReference \"!!create-plugin-type\">> type=\"nomatch\" text=\"theme\">\r\n\t\t\t\t    <$action-setfield create-title=<<concatPluginTitle \"$:/plugins/\" \"/\">> />\r\n                </$reveal>\r\n\t\t\t</$set>\r\n\t\t</$set>\r\n\t\r\n\t\t<$tinka-saveTaglistToField $target=<<qualified-modify-add>> $tiddler=<<qualified-modify-diff>> $field=\"addTiddlers\"/>\r\n\t\t<$tinka-repackagePlugin $plugin=\"$:/plugins/unknown/newPlugin\" $create=\"yes\" $diff=<<qualified-modify-diff>> />\r\n\t\t<!-- Adjust version number to not be increased -->\r\n\t\t<$action-setfield $tiddler={{!!create-title}} version={{!!create-version}} />\r\n\t\t<$action-deletetiddler $tiddler=<<qualified-modify-add>>/>\r\n\t\t<$action-deletetiddler $tiddler=<<qualified-modify-diff>>/>\r\n\t\t<$action-sendmessage $message=\"tm-modal\" $param=\"$:/plugins/ahahn/tinka/packageSuccess\" />\r\n\t</$tinka-filter>\r\n\t<$tinka-filter verb=\"fail\">\r\n\t\t<$action-sendmessage $message=\"tm-modal\" $param=\"$:/plugins/ahahn/tinka/packageErrors\" errorVars=<<TinkaVars>>/>\r\n\t</$tinka-filter>\r\n\t</$set>\r\n\t</$tinka-check>\r\n\t</$set>\r\n</$set>\r\n</$set>\r\nPackage plugin</$button>\n\n\r\n</$set>\r\n</$set>\r\n"
        },
        "$:/plugins/ahahn/tinka/createMetadata/noSpecialPluginType": {
            "title": "$:/plugins/ahahn/tinka/createMetadata/noSpecialPluginType",
            "type": "text/vnd.tiddlywiki",
            "text": "<tr>\r\n        <td>Name:</td>\r\n        <td><$edit-text tag=\"input\" type=\"text\" field=\"create-name\" placeholder=\"e.g. My Plugin\"/></td>\n\n    \t<td>Description:</td>\r\n        <td><$edit-text tag=\"input\" type=\"text\" placeholder=\"e.g. super cool plugin\" field=\"create-description\"/></td>\r\n</tr>\r\n"
        },
        "$:/plugins/ahahn/tinka/createMetadata/pluginPluginType": {
            "title": "$:/plugins/ahahn/tinka/createMetadata/pluginPluginType",
            "type": "text/vnd.tiddlywiki",
            "text": "<tr>\r\n        <td>''Plugin Name:''</td>\r\n        <td colspan=\"3\"><$edit-text class=\"tinka-full-edit\" tag=\"input\" type=\"text\" field=\"create-name\" placeholder=\"e.g. Tinka\"/></td>\r\n</tr>\r\n<tr>\r\n    \t<td>''Plugin Description:''</td>\r\n        <td colspan=\"3\"><$edit-text class=\"tinka-full-edit\" tag=\"input\" type=\"text\" placeholder=\"e.g. Tinka - Plugin Packer\" field=\"create-description\" placeholder=\"e.g. An easy plugin packer\"/></td>\r\n</tr>\r\n"
        },
        "$:/plugins/ahahn/tinka/createMetadata/tableEnd": {
            "title": "$:/plugins/ahahn/tinka/createMetadata/tableEnd",
            "type": "text/vnd.tiddlywiki",
            "text": "<tr>\r\n        <td>Version:</td>\r\n        <td><$edit-text tag=\"input\" type=\"text\" field=\"create-version\"/></td>\r\n        \r\n\t\t<td>Core-Version:</td>\r\n        <td><$edit-text type=\"text\" placeholder=\"e.g. >=5.1.8\" tag=\"input\" field=\"create-core-version\"/></td>\r\n\t</tr>\r\n"
        },
        "$:/plugins/ahahn/tinka/createMetadata/tableHead": {
            "title": "$:/plugins/ahahn/tinka/createMetadata/tableHead",
            "type": "text/vnd.tiddlywiki",
            "text": "\t<tr>\r\n\t\t<td>''Plugin Path:''</td>\r\n        <td colspan=\"3\">`$:/plugins/`<$edit-text class=\"tinka-inline-edit\" type=\"text\" placeholder=\"e.g. myName\" tag=\"input\" field=\"create-title-org\"/>`/`<$edit-text type=\"text\" class=\"tinka-inline-edit\" placeholder=\"e.g. myPlugin\" tag=\"input\" field=\"create-title-name\" /></td> \r\n\t</tr>\r\n    \r\n    <tr>\r\n\t\t<td>Author:</td>\r\n        <td><$edit-text type=\"text\" placeholder=\"e.g. John Doe\" tag=\"input\" field=\"create-author\"/></td>\r\n\t\t\r\n\t\t<td>Source:</td>\r\n        <td><$edit-text tag=\"input\" type=\"text\" placeholder=\"e.g. http://twguides.org\" field=\"source\"/></td>\r\n\t</tr>\n\n\t<tr>\r\n\t\t<td>Dependents:</td>\r\n        <td><$edit-text tag=\"input\" type=\"text\" field=\"create-dependents\"/></td>\r\n        \r\n        <td>List:</td>\r\n        <td><$edit-text tag=\"input\" type=\"text\" placeholder=\"e.g. readme usage\" field=\"create-list\"/></td>\r\n  \t</tr>\r\n"
        },
        "$:/plugins/ahahn/tinka/createMetadata/themePluginType": {
            "title": "$:/plugins/ahahn/tinka/createMetadata/themePluginType",
            "type": "text/vnd.tiddlywiki",
            "text": "<tr>\r\n    <td>''Theme Name:''</td>\r\n    <td colspan=\"3\"><$edit-text  class=\"tinka-full-edit\" tag=\"input\" type=\"text\" placeholder=\"e.g. My cool theme\" field=\"create-name\"/></td>\r\n</tr>\n\n<tr>\r\n        <td>''Theme Description:''</td>\r\n        <td colspan=\"3\"><$edit-text class=\"tinka-full-edit\" tag=\"input\" type=\"text\" placeholder=\"e.g. My description\" field=\"create-description\"/></td>\r\n</tr>\r\n"
        },
        "$:/plugins/ahahn/tinka/createMetadata": {
            "title": "$:/plugins/ahahn/tinka/createMetadata",
            "create-plugin-type": "plugin",
            "create-title": "",
            "created": "20150429174811520",
            "modified": "20170225181341996",
            "tags": "",
            "type": "text/vnd.tiddlywiki",
            "text": "''Plugin-Type:'' <$edit-text tag=\"input\" type=\"text\" field=\"create-plugin-type\"/>\r\n        <$button popup=\"$:/temp/tinka/NewPluginPopup\" class=\"tc-btn-invisible tc-btn-dropdown\">{{$:/core/images/down-arrow}}</$button>\r\n\t\r\n\t\t<$reveal state=\"$:/temp/tinka/NewPluginPopup\" type=\"popup\" position=\"below\">\r\n\t\t<div class=\"tc-block-dropdown tc-edit-type-dropdown\">\r\n\t\t<$linkcatcher to=\"!!create-plugin-type\">\r\n\t\t\t<$link to=\"plugin\">Plugin</$link>\r\n\t\t\t<$link to=\"theme\">Theme</$link>\r\n\t\t</$linkcatcher>\r\n\t\t</div>\r\n\t\t</$reveal>\n\n<$reveal state=\"!!create-plugin-type\" type=\"nomatch\" text=\"plugin\" >\r\n\t<$reveal state=\"!!create-plugin-type\" type=\"nomatch\" text=\"theme\" >\r\n\t\t<table class=\"tinka-meta-table\">\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/tableHead\" />\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/noSpecialPluginType\" />\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/tableEnd\" />\r\n\t\t</table>\r\n\t</$reveal>\r\n</$reveal>\n\n<$reveal state=\"!!create-plugin-type\" type=\"match\" text=\"plugin\">\r\n\t\t<table class=\"tinka-meta-table\">\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/tableHead\" />\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/pluginPluginType\" />\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/tableEnd\" />\r\n\t\t</table>\r\n</$reveal>\n\n<$reveal state=\"!!create-plugin-type\" type=\"match\" text=\"theme\">\r\n\t\t<table class=\"tinka-meta-table\">\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/tableHead\" />\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/themePluginType\" />\r\n\t\t<$transclude tiddler=\"$:/plugins/ahahn/tinka/createMetadata/tableEnd\" />\r\n\t\t</table>\r\n</$reveal>\n\n''bold'' = //required field//\r\n"
        },
        "$:/plugins/ahahn/tinka/dropdownManage": {
            "title": "$:/plugins/ahahn/tinka/dropdownManage",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define plugin-tiddler-selection()\r\n[[$(target)$]plugintiddlers[]]\r\n\\end\n\n\\define qualified-remove-popup()\r\n$:/state/popup/$(qualifiedTiddler)$-$(target)$-remove-popup\r\n\\end\n\n\\define qualified-modify-remove()\r\n$(qualifiedTiddler)$-$(target)$-remove\r\n\\end\n\n\\define qualified-modify-add()\r\n$(qualifiedTiddler)$-$(target)$-add\r\n\\end\n\n\\define qualified-modify-diff()\r\n$(qualifiedTiddler)$-$(target)$-diff\r\n\\end\n\n\\define target-type()\r\n$(target)$!!plugin-type\r\n\\end\n\n\\define added-filter()\r\n[[$(addedTiddlers)$]tags[]]\r\n\\end\n\n\\define pluginSuffixFilter()\r\n[[$(target)$]prefix[$:/plugins/]removeprefix[$:/plugins/]] [[$(target)$]!prefix[$:/plugins/]]\r\n\\end\n\n\\define sideTabNameBuilder()\r\n$:/plugins/ahahn/tinka/temp/$(pluginSuffix)$ - Help Tab\r\n\\end\n\n\\define helpTabCaption()\r\n$(pluginSuffix)$ - Help Tab\r\n\\end\n\n\\define helpTabText()\r\n<$set name=\"pluginPrefix\" value=\"$(target)$\" >\r\n<$set name=\"currentTiddler\" value=\"$(sideTabName)$\" >\n\n<$transclude tiddler=\"$:/plugins/ahahn/tinka/pluginSidePanel\" />\n\n</$set>\r\n</$set>\r\n\\end\n\n\\define buttonRow()\r\n<$reveal state=<<target-type>> type=\"match\" text=\"theme\">\r\n<span class=\"tinka-note-red\">Warning: Themes can only be repackaged if the theme is currently active or loaded as a dependant!</span>\r\n</$reveal>\n\n<$button class=\"tc-btn-big-green tinka-orange\">\r\n<$tinka-saveTaglistToField $target=<<qualified-modify-remove>> $tiddler=<<qualified-modify-diff>> $field=\"removeTiddlers\"/>\r\n<$tinka-saveTaglistToField $target=<<qualified-modify-add>> $tiddler=<<qualified-modify-diff>> $field=\"addTiddlers\"/>\r\n<$tinka-repackagePlugin $plugin=<<target>> $create=\"no\" $diff=<<qualified-modify-diff>> />\r\n<$action-deletetiddler $tiddler=<<qualified-modify-remove>>/>\r\n<$action-deletetiddler $tiddler=<<qualified-modify-add>>/>\r\n<$action-deletetiddler $tiddler=<<qualified-modify-diff>>/>\r\n<$action-sendmessage $message=\"tm-modal\" $param=\"$:/plugins/ahahn/tinka/packageSuccess\" />Re-package plugin</$button>\r\n<$button class=\"tc-btn-big-green tinka-blue\">\r\n<$tinka-backupPlugin $plugin=<<target>> />\r\n<$action-sendmessage $message=\"tm-modal\" $param=\"$:/plugins/ahahn/tinka/backupSuccess\" />Create Backup</$button>\r\n<$list filter=<<pluginSuffixFilter>> variable=\"pluginSuffix\">\r\n<$set name=\"sideTabName\" value=<<sideTabNameBuilder>> >\r\n<$reveal state=<<sideTabName>> type=\"match\" text=\"\">\r\n<$button class=\"tc-btn-big-green tinka-blue\">Enable Sidebar-Tab\r\n<$action-setfield $tiddler=<<sideTabName>> text=<<helpTabText>> caption=<<helpTabCaption>> tags=\"$:/tags/SideBar\" />\r\n</$button>\r\n</$reveal>\r\n<$reveal state=<<sideTabName>> type=\"nomatch\" text=\"\">\r\n<$button class=\"tc-btn-big-green tinka-blue\">Disable Sidebar-Tab\r\n<$action-deletetiddler $tiddler=<<sideTabName>> />\r\n</$button>\r\n</$reveal>\r\n</$set>\r\n</$list>\n\n\\end\n\n<$set name=\"qualifiedTiddler\" value=<<qualify \"$:/temp/tinka/modify\">> >\n\nIf you have edited the shadow tiddlers that belong to the plugin, just repackage without making any changes. That way the packaged plugin will incorporate the changes made to the individual tiddlers. Refer to the [[Documentation|$:/plugins/ahahn/tinka/usage]] for help.\n\n<<buttonRow>>\n\n<span class=\"tinka-note\">Note: It is recommended to create a backup before repackaging a plugin.</span>\n\n!!! Edit Metadata\r\n<span class=\"tinka-note\">Note: Changes will be committed immediately.</span>\n\n<$set name=\"currentTiddler\" value=<<target>>>\r\n\t<$transclude mode=\"block\" tiddler=\"$:/plugins/ahahn/tinka/editMetadata\"/>\r\n</$set>\n\n!!! Remove Tiddlers\r\n<span class=\"tinka-note\">Note: Re-packaging required for changes to take effect.</span>\n\n<$reveal type=\"match\" text=\"\" state=<<qualified-remove-popup>> ><$button set=<<qualified-remove-popup>> setTo=\"show\" class=\"tc-btn-invisible\">{{$:/core/images/right-arrow}} Show plugin tiddlers</$button></$reveal>\r\n<$reveal type=\"nomatch\" text=\"\" state=<<qualified-remove-popup>> >\r\n<$button set=<<qualified-remove-popup>> setTo=\"\" class=\"tc-btn-invisible\">{{$:/core/images/down-arrow}} Hide plugin tiddlers</$button>\r\n<ul>\r\n\t<$list filter=<<plugin-tiddler-selection>> emptyMessage=\"<i>No tiddlers in plugin.</i>\">\r\n\t\t<li class=\"tinka-list-item\">\r\n        <$checkbox tiddler=<<qualified-modify-remove>> tag={{!!title}} />\r\n        <$link to={{!!title}}><$text text={{!!title}} /></$link></li>\r\n\t</$list>\r\n</ul>\r\n</$reveal>\n\n!!! Add Tiddlers\r\n<span class=\"tinka-note\">Note: Re-packaging required for changes to take effect.</span>\n\nUse the search box below to select the tiddlers you want to add to the plugin.\n\n{{$:/plugins/ahahn/tinka/searchDisplay}}\n\n\r\n''Added Tiddlers''\n\n<$set name=\"addedTiddlers\" value=<<qualified-modify-add>> >\r\n<ul>\r\n<$list filter=<<added-filter>> emptyMessage=\"<i>No tiddlers added.</i>\">\r\n\t\t<li class=\"tinka-list-item\">\r\n        <$checkbox tiddler=<<qualified-modify-add>> tag={{!!title}} />\r\n        <$link to={{!!title}}>{{!!title}}</$link>\r\n        </li>\r\n</$list>\r\n</ul>\r\n</$set>\n\n<<buttonRow>>\n\n</$set>\r\n"
        },
        "$:/plugins/ahahn/tinka/editMetadata": {
            "title": "$:/plugins/ahahn/tinka/editMetadata",
            "type": "text/vnd.tiddlywiki",
            "text": "|tinka-meta-table|k\r\n|Name:|<$edit-text tag=\"input\" type=\"text\" field=\"name\"/>|Author:|<$edit-text type=\"text\" tag=\"input\" field=\"author\"/>|\r\n|Description:|<$edit-text tag=\"input\" type=\"text\" field=\"description\"/>|<|<|\r\n|Dependents:|<$edit-text tag=\"input\" type=\"text\" field=\"dependents\"/>|List:|<$edit-text tag=\"input\" type=\"text\" field=\"list\"/>|\r\n|Plugin-Type:|<$edit-text tag=\"input\" type=\"text\" field=\"plugin-type\"/>|Version:|<$edit-text tag=\"input\" type=\"text\" field=\"version\"/>|\r\n|Source:|<$edit-text tag=\"input\" type=\"text\" field=\"source\"/>|Core-Version:|<$edit-text tag=\"input\" type=\"text\" field=\"core-version\"/>|\r\n"
        },
        "$:/plugins/ahahn/tinka/backupSuccess": {
            "title": "$:/plugins/ahahn/tinka/backupSuccess",
            "caption": "Backup Success",
            "subtitle": "Backup Success",
            "type": "text/vnd.tiddlywiki",
            "text": "<div class=\"tinka-success\">\n\n!!{{$:/core/images/done-button}} Backup Success !\n\nA backup of the plugin was successfully created.\n\n</div>\r\n"
        },
        "$:/plugins/ahahn/tinka/packageErrors": {
            "title": "$:/plugins/ahahn/tinka/packageErrors",
            "caption": "Packaging Errors!",
            "subtitle": "Packaging Errors!",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define errorFilter()\r\n[[$(errorVars)$]fields[]prefix[error]]\r\n\\end\n\n\r\n<div class=\"tinka-error\">\n\n!!{{$:/core/images/close-button}} There were some errors !\n\nThe follwoing errors occured whilst processing your request:\n\n<ul>\r\n\t<$list filter=<<errorFilter>> variable=\"errorField\">\r\n\t\t<li><$view tiddler=<<errorVars>> field=<<errorField>> /></li>\r\n\t</$list>\r\n</ul>\r\n</div>\r\n"
        },
        "$:/plugins/ahahn/tinka/packageSuccess": {
            "title": "$:/plugins/ahahn/tinka/packageSuccess",
            "caption": "Packaging Success",
            "subtitle": "Packaging Success",
            "type": "text/vnd.tiddlywiki",
            "text": "<div class=\"tinka-success\">\n\n!!{{$:/core/images/done-button}} (Re-)Packaging Success !\n\nThe plugin was successfully (re-)packaged. It is recommended to <u>save and reload</u> the wiki now in order to avoid plugins to misbehave.\n\n    <div class=\"tinka-centered-container\">\r\n        <span class=\"tinka-saving\">{{$:/core/images/save-button}} Saving...<br/><sub>(If your wiki doesn't save automatically, please save&reload manually.)</sub></span>\r\n        <$button class=\"tc-btn-big-green tinka-enlarge tinka-orb tinka-button-refresh\">\r\n            <$action-sendmessage $message=\"tm-browser-refresh\" />\r\n            {{$:/core/images/refresh-button}}\r\n            <p>\r\n                <b>RELOAD NOW!</b>\r\n            </p>\r\n        </$button>\r\n    </div>\r\n</div>\r\n"
        },
        "$:/plugins/ahahn/tinka/restoreSuccess": {
            "title": "$:/plugins/ahahn/tinka/restoreSuccess",
            "caption": "Restore Successful",
            "subtitle": "Restore Successful",
            "type": "text/vnd.tiddlywiki",
            "text": "<div class=\"tinka-success\">\n\n!!{{$:/core/images/done-button}} Restore Success !\n\nThe backup was successfully restored!\n\n</div>\r\n"
        },
        "$:/plugins/ahahn/tinka/pluginManagement": {
            "title": "$:/plugins/ahahn/tinka/pluginManagement",
            "caption": "Modify Plugins",
            "tags": "$:/tags/tinka/ControlPanel",
            "type": "text/vnd.tiddlywiki",
            "text": "\r\n\\define plugin-dropdown(type)\r\n<$list filter=\"[!has[draft.of]plugin-type[$type$]sort[description]]\" emptyMessage=<<lingo \"Empty/Hint\">>>\n\n<$reveal type=\"match\" text=<<currentTiddler>> state=\"$:/temp/tinka/ModifyPluginSearch!!search\" >\r\n\t<div class=\"tc-plugin-info-dropdown\">\r\n\t<div class=\"tc-plugin-info-dropdown-body\">\r\n\t<$set name=\"target\" value=<<currentTiddler>> >\r\n\t<h2 style=\"text-align: center;\">''<$text text={{{ [<currentTiddler>get[name]] ~[<currentTiddler>split[/]last[1]] }}} />''</h2>\r\n\t<h3 style=\"text-align: center;\">Version: <$view field=\"version\" /> - <$view field=\"description\" /></h3>\n\n\t{{$:/plugins/ahahn/tinka/dropdownManage}}\n\n\t</$set>\r\n\t</div>\r\n\t</div>\r\n</$reveal>\n\n</$list>\r\n\\end\n\n''Choose Plugin to Modify:'' <$edit-text tag=\"input\" type=\"text\" placeholder=\"$:/plugins/myPlugin\" tiddler=\"$:/temp/tinka/ModifyPluginSearch\" field=\"search\"/>\r\n<$button popup=\"$:/temp/tinka/ModifyPluginPopup\" class=\"tc-btn-invisible tc-btn-dropdown\">{{$:/core/images/down-arrow}}</$button>\n\n<$reveal state=\"$:/temp/tinka/ModifyPluginPopup\" type=\"popup\" position=\"below\">\r\n<div class=\"tc-block-dropdown tc-edit-type-dropdown\">\r\n<$linkcatcher to=\"$:/temp/tinka/ModifyPluginSearch!!search\">\r\n<h3>Plugins:</h3>\r\n<$list filter=\"[!has[draft.of]plugin-type[plugin]sort[description]]\" emptyMessage=<<lingo \"Empty/Hint\">>>\r\n\t<$link to=<<currentTiddler>> >''<$text text={{{ [<currentTiddler>get[name]] ~[<currentTiddler>split[/]last[1]] }}} />'' - <$view field=\"version\" /></$link>\r\n</$list>\r\n<h3>Themes:</h3>\r\n<$list filter=\"[!has[draft.of]plugin-type[theme]sort[description]]\" emptyMessage=<<lingo \"Empty/Hint\">>>\r\n\t<$link to=<<currentTiddler>> >''<$text text={{{ [<currentTiddler>get[name]] ~[<currentTiddler>split[/]last[1]] }}} />'' - <$view field=\"version\" /></$link>\r\n</$list>\r\n</$linkcatcher>\r\n</div>\r\n</$reveal>\n\n\r\n<<plugin-dropdown plugin>>\r\n<<plugin-dropdown theme>>\n\n"
        },
        "$:/plugins/ahahn/tinka/pluginSidePanel": {
            "title": "$:/plugins/ahahn/tinka/pluginSidePanel",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define pluginFilter()\r\n[[$(pluginPrefix)$]plugintiddlers[]sort[]]\r\n\\end\n\n\\define pluginDirFilter()\r\n[all[tiddlers]prefix[$(pluginPrefix)$]sort[]]\r\n\\end\n\n!!!Shadow tiddlers contained in the plugin:\n\n<$list filter=<<pluginFilter>> template=\"$:/core/ui/ListItemTemplate\"/>\n\n!!!Normal tiddlers in the plugin directory:\r\n<$list filter=<<pluginDirFilter>> template=\"$:/core/ui/ListItemTemplate\"/>\n\n<$reveal state=\"!!extender\" type=\"nomatch\" text=\"open\">\r\n<$button set=\"!!extender\" setTo=\"open\" class=\"tc-btn-invisible tinka-sidebar-button\"><h3>{{$:/core/images/chevron-right}} Filter search</h3></$button>\r\n</$reveal>\r\n<$reveal state=\"!!extender\" type=\"match\" text=\"open\">\r\n<$button set=\"!!extender\" setTo=\"close\" class=\"tc-btn-invisible tinka-sidebar-button\"><h3>{{$:/core/images/chevron-down}} Filter search</h3></$button>\r\n<div>\r\n<$edit-text type=\"search\" tiddler=\"$:/plugins/ahahn/tinka/temp/helpTabSearch\" field=\"filterSearch\" />\r\n<$list filter={{$:/plugins/ahahn/tinka/temp/helpTabSearch!!filterSearch}} template=\"$:/core/ui/ListItemTemplate\"/>\r\n</div>\r\n</$reveal>\n\n<$button class=\"tc-btn-big-green tinka-orange\">\r\n<$tinka-repackagePlugin $plugin=<<pluginPrefix>> $create=\"no\" $diff=\"$:/plugins/ahahn/tinka/emptyDiff\" />\r\n<$action-sendmessage $message=\"tm-modal\" $param=\"$:/plugins/ahahn/tinka/packageSuccess\" />Quick-Package</$button>\r\n<$button class=\"tc-btn-big-green tinka-blue\">\r\n<$action-deletetiddler $tiddler=<<currentTiddler>> />\r\nDisable Help Tab</$button>\r\n"
        },
        "$:/plugins/ahahn/tinka/search-default": {
            "title": "$:/plugins/ahahn/tinka/search-default",
            "caption": "Default search",
            "tags": "$:/tags/TinkaSearch",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define searchstring()\r\n[all[tiddlers]search:title{$(searchTiddler)$}sort[title]]\r\n\\end\n\nEnter search term: <$edit-text class=\"tinka-full-edit\" tiddler=\"$:/temp/tinka/search\" type=\"search\" default=\"\" tag=\"input\"/> <$reveal state=\"$:/temp/tinka/search\" type=\"nomatch\" text=\"\"><$button class=\"tc-btn-invisible\" set=\"$:/temp/tinka/search\" setTo=\"\">{{$:/core/images/close-button}}</$button></$reveal>\n\n<$reveal state=\"$:/temp/tinka/search\" type=\"nomatch\" text=\"\">\r\n    <$set name=\"searchTiddler\" value=\"$:/temp/tinka/search\">\r\n    <ul>\r\n    <$list filter=<<searchstring>> emptyMessage=\"<li class='tinka-list-item'><i>No Tiddlers selected.</i></li>\">\r\n            <li class=\"tinka-list-item\">\r\n            <$checkbox tiddler=<<qualified-modify-add>> tag={{!!title}} />\r\n            <$link to={{!!title}}><$text text={{!!title}} /></$link>\r\n            </li>\r\n    </$list>\r\n    </ul>\n\n\t<$macrocall $name=\"selectAllButtons\" sa_filter=<<searchstring>> />\r\n    </$set>\r\n</$reveal>\n\n<!--Empty search string would list all tiddlers-->\r\n<$reveal state=\"$:/temp/tinka/search\" type=\"match\" text=\"\">\r\n    <ul>\r\n        <li class=\"tinka-list-item\"><i>No Tiddlers selected.</i></li>\r\n    </ul>\r\n</$reveal>\n\n\r\n"
        },
        "$:/plugins/ahahn/tinka/search-filter": {
            "title": "$:/plugins/ahahn/tinka/search-filter",
            "caption": "Filter search",
            "list-after": "$:/plugins/ahahn/tinka/search-default",
            "tags": "$:/tags/TinkaSearch",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define defaultFilter()\r\n[prefix[$(target)$]]\r\n\\end\n\nEnter Filterstring to select tiddlers: <$edit-text class=\"tinka-full-edit\" tiddler=\"$:/temp/tinka/search\" type=\"search\" default=<<defaultFilter>> placeholder=<<defaultFilter>> tag=\"input\"/> <$reveal state=\"$:/temp/tinka/search\" type=\"nomatch\" text=\"\"><$button class=\"tc-btn-invisible\" set=\"$:/temp/tinka/search\" setTo=\"\">{{$:/core/images/close-button}}</$button></$reveal>\r\n<ul>\r\n<$reveal text=\"\" type=\"nomatch\" state=\"$:/temp/tinka/search\">\r\n<$list filter={{$:/temp/tinka/search}} emptyMessage=\"<li class='tinka-list-item'><i>No Tiddlers selected.</i></li>\">\r\n\t\t<li class=\"tinka-list-item\">\r\n        <$checkbox tiddler=<<qualified-modify-add>> tag={{!!title}} />\r\n        <$link to={{!!title}}><$text text={{!!title}} /></$link>\r\n        </li>\r\n</$list>\r\n<$macrocall $name=\"selectAllButtons\" sa_filter={{$:/temp/tinka/search}} />\r\n</$reveal>\r\n<$reveal text=\"\" type=\"match\" state=\"$:/temp/tinka/search\">\r\n<$list filter=<<defaultFilter>> emptyMessage=\"<li class='tinka-list-item'><i>No Tiddlers selected.</i></li>\">\r\n\t\t<li class=\"tinka-list-item\">\r\n        <$checkbox tiddler=<<qualified-modify-add>> tag={{!!title}} />\r\n        <$link to={{!!title}}><$text text={{!!title}} /></$link>\r\n        </li>\r\n</$list>\r\n<$macrocall $name=\"selectAllButtons\" sa_filter=<<defaultFilter>> />\r\n</$reveal>\r\n</ul>\r\n"
        },
        "$:/plugins/ahahn/tinka/searchDisplay": {
            "title": "$:/plugins/ahahn/tinka/searchDisplay",
            "type": "text/vnd.tiddlywiki",
            "text": "\\define selectAllButtons(sa_filter)\r\n<$fieldmangler tiddler=<<qualified-modify-add>> >\r\n\t<$button>\r\n\t\tSelect All\r\n\t\t<$list filter=\"$sa_filter$\">\r\n\t\t\t<$action-sendmessage $message=\"tm-add-tag\" $param=<<currentTiddler>> />\r\n\t\t</$list>\r\n\t</$button>\r\n\t<$button>\r\n\t\tUnselect All\r\n\t\t<$list filter=\"$sa_filter$\">\r\n\t\t\t<$action-sendmessage $message=\"tm-remove-tag\" $param=<<currentTiddler>> />\r\n\t\t</$list>\r\n\t</$button>\r\n</$fieldmangler>\r\n\\end\n\n<<tabs \"[[$:/plugins/ahahn/tinka/search-default]] [[$:/plugins/ahahn/tinka/search-filter]]\" \"$:/plugins/ahahn/tinka/search-default\" \"$:/temp/tinka/searchTab\">>\r\n"
        },
        "$:/plugins/ahahn/tinka/usage": {
            "title": "$:/plugins/ahahn/tinka/usage",
            "caption": "Usage/Help",
            "created": "20150430092825762",
            "modified": "20170225181342015",
            "tags": "",
            "type": "text/vnd.tiddlywiki",
            "text": "{{$:/plugins/ahahn/tinka/docs/How to create a new plugin}}\n\n{{$:/plugins/ahahn/tinka/docs/Help Tab}}\n\n!! Notes\n\nWhen ''repackaging'' a plugin, the version number of the plugin is automatically increased. This might not be wanted in all cases and has to be manually corrected after packaging.\n\nAlso version suffixes such as:\n\n* -prerelease\r\n* -beta\n\nare supported and will be appended to the new version number when present.\n\n!! Adding items to the list field\n\nItems added to the `list` field will become tab entries in the generated plugin. Each item in the list should have a corresponding tiddler with the format:\n\n```\r\n$:/plugins/<author>/<plugin>/<tiddler>\r\n```\n\nwhere `<author>` is the name you provided as author, `<plugin>` is the name of the plugin you are creating, and `<tiddler>` is the same as the name that appears in the list entry.\n\nThe contents of the tab referenced in the `list` field will then be provided by the corresponding `$:/plugins/<author>/<plugin>/<tiddler>` tiddler.\n\n!! Plugin mechanism\r\nFor more information about how the plugin mechanism in TiddlyWiki works, see the official documentation: http://tiddlywiki.com/#PluginMechanism\n\n!! Filter language\r\nFilters are useful to select a subset of tiddlers from a wiki. If you are new to filters, learn more about them here: http://tiddlywiki.com/#Filters\r\n"
        }
    }
}